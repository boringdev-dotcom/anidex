basePath: /
definitions:
  models.AuthProvider:
    enum:
    - local
    - google
    - facebook
    - firebase
    type: string
    x-enum-varnames:
    - AuthProviderLocal
    - AuthProviderGoogle
    - AuthProviderFacebook
    - AuthProviderFirebase
  models.AuthResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  models.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      provider:
        $ref: '#/definitions/models.AuthProvider'
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@anidex.com
    name: API Support
  description: API for Anidex mobile application with authentication and social login
  title: Anidex API
  version: "1.0"
paths:
  /api/auth/facebook:
    get:
      description: Redirect to Facebook OAuth login page
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Initiate Facebook OAuth login
      tags:
      - auth
  /api/auth/facebook/callback:
    get:
      description: Process Facebook OAuth callback and authenticate user
      parameters:
      - description: Authorization code
        in: query
        name: code
        required: true
        type: string
      - description: State parameter
        in: query
        name: state
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Handle Facebook OAuth callback
      tags:
      - auth
  /api/auth/firebase:
    post:
      consumes:
      - application/json
      description: Verify Firebase ID token and authenticate user
      parameters:
      - description: Firebase ID token and optional name
        in: body
        name: request
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Authenticate with Firebase ID token
      tags:
      - auth
  /api/auth/google:
    get:
      description: Redirect to Google OAuth login page
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Initiate Google OAuth login
      tags:
      - auth
  /api/auth/google/callback:
    get:
      description: Process Google OAuth callback and authenticate user
      parameters:
      - description: Authorization code
        in: query
        name: code
        required: true
        type: string
      - description: State parameter
        in: query
        name: state
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Handle Google OAuth callback
      tags:
      - auth
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and get tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /api/auth/profile:
    get:
      description: Get current user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - auth
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      description: Get new access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh access token
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
